@using System.ComponentModel.DataAnnotations
    
<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <MudDialog>

        <DialogContent>
            <MudTextField Label="First name" HelperText="Max. 8 characters"
                @bind-Value="model.Username" For="@(() => model.Username)" />
            <MudTextField Label="Email" Class="mt-3"
                @bind-Value="model.Email" For="@(() => model.Email)" />
            <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
            <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                @bind-Value="model.Password2" For="@(() => model.Password2)" InputType="InputType.Password" />
        </DialogContent>

        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary">Ok</MudButton>
        </DialogActions>
    
    </MudDialog>
</EditForm>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    RegisterAccountForm model = new RegisterAccountForm();
    bool success;

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string? Username { get; set; }

        [Required]
        [EmailAddress]
        public string? Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string? Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string? Password2 { get; set; }
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();

        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog.Cancel();
}